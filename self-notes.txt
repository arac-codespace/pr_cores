Inside that directory, you can run several commands:

  yarn start
    Starts the development server.

  yarn build
    Bundles the app into static files for production.

  yarn test
    Starts the test runner.

  yarn eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

We suggest that you begin by typing:

  cd frontend
  yarn start

Happy hacking!

...

Setup react + django api so it should work in prod and env.  
Btw, if you want to test production settings, just do;

python manage.py runserver --settings=pr_cores.production_settings

And tweak pertinent settings.


Anyway, Database structure is done for now and the basic react + django
setup is done.  Now I need to start working on the view and decide
whether or not I should implement redux...

Site setup will probably include...
Samples view which will list all bagged and core samples.
From samples, navigate to cores and bag index, or click an id to
navigate to sample details.

I'll probably need to add a publication model wherein I can include the
ids of all samples and info about the publication.  In theory, I might
be able to do a reverse lookup (from sample to publication) and add related
publication details into the sample page...


Anyway, in survey I'll have the initial map state show the polygon hull of
the surveys only.  When the user clicks the polygon area, I'll open a
modal window that will display info about the survey.

If I want to keep using the menu window, I probably need an onClick that will
turn on the menu.  Then I have to figure out how to arrange that
mini-menu...